<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Arroway!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>

    <section>
        <title>I. OO szemlélet</title>
        
        <programlisting language = "java"><![CDATA[
        public class PolarGenerator {

	boolean nincsTarolt = true;
	double tarolt;
	
	public PolarGenerator() {
		nincsTarolt = true;
	}
	
	public double kovetkezo() {
		if(nincsTarolt) {
			double u1, u2, v1, v2, w;
			do {
				u1 = Math.random();
				u2 = Math.random();
				
				v1 = 2 * u1 - 1;
				v2 = 2 * u2 - 1;
				
				w = v1 * v1 + v2 * v2;
			} while(w > 1);
			double r = Math.sqrt(-2 * Math.log(w) / w);
			
			tarolt = r * v2;
			
			nincsTarolt = !nincsTarolt;
			return r * v1;
		} else {
			nincsTarolt = !nincsTarolt;
			return tarolt;
		}
	}
	
	public static void main(String[] args) {
		PolarGenerator pg = new PolarGenerator();
		
		for(int i = 0; i < 10; i++) {
			System.out.println(pg.kovetkezo());
		}
	}
        }
        ]]></programlisting>
        <para>
           <emphasis role = "strong">Tanulságok, tapasztalatok, magyarázat:</emphasis>
        </para>          
    </section>           

    <section>
        
        <title>II. Homokozó</title>
        
        <programlisting language = "java"><![CDATA[
        
        ]]></programlisting>
        <para>
           <emphasis role = "strong">Tanulságok, tapasztalatok, magyarázat:</emphasis>
        </para>       
    </section>
    
    <section>
        
        <title>III. "Gagyi"</title>
        
        <programlisting language = "java"><![CDATA[
        public class Gagyi {

	public static void main(String[] args) {
		
		Integer i = 130;
		Integer j = 130;
		
		if(i <= j && i >= j && i != j) {
			System.out.println("1. Belép i = " + i + " j = " + j);
		}	
		
		i = 10;
		j = 10;
		
		if(i <= j && i >= j && i != j) {
			System.out.println("2. Belép i = " + i + " j = " + j);
		}
		
		i = new Integer(10);
		j = new Integer(10);
		
		if(i <= j && i >= j && i != j) {
			System.out.println("3. Belép i = " + i + " j = " + j);
		}
	}
        }
        ]]></programlisting>
        <para>
           <emphasis role = "strong">Tanulságok, tapasztalatok, magyarázat:</emphasis>
        </para>       
    </section>
    
    <section>
        
        <title>IV. Yoda</title>
        
        <programlisting language = "java"><![CDATA[
        public class Yoda {

	public static void main(String[] args) {
		
		final String str = null;
		
		try {
			if(str.equals("something")) {
				//Do something
			}
			System.out.println("1. Success");

		} catch(Exception e) {
			System.err.println(e.getMessage());
		}

		try {
			if("something".equals(str)) {
				//Do something
			}
			System.out.println("2. Success");

		} catch(Exception e) {
			System.err.println(e.getMessage());
		}
	}
        }
        ]]></programlisting>
        <para>
           <emphasis role = "strong">Tanulságok, tapasztalatok, magyarázat:</emphasis>
        </para>       
    </section>
    
    <section>
        
        <title>V. Kódolás from scratch</title>
        
        <programlisting language = "java"><![CDATA[
        public class PI_Szamolo {

	public static void main(String[] args) {

		double s1 = s_solve(1000000, 1);
		double s4 = s_solve(1000000, 4);
		double s5 = s_solve(1000000, 5);
		double s6 = s_solve(1000000, 6);
	
		s1 = simplify(s1);
		s4 = simplify(s4);
		s5 = simplify(s5);
		s6 = simplify(s6);
		
		double pi = 4*s1 -2*s4 - s5 -s6;
		
		pi = simplify(pi);

		System.out.println(s1);
		System.out.println(s4);
		System.out.println(s5);
		System.out.println(s6);
		System.out.println(pi);
		
		String[] hexa = {"A", "B", "C", "D", "E", "F"};
		String result = "";
		
		while(simplify(pi) != 0) {
			pi = pi*16;
			if((int)pi >= 10) {
				result = result.concat(hexa[(int)pi - 10]);
			} else {
				result = result.concat(Integer.toString((int)pi));
			}
			pi = simplify(pi);
		}
		System.out.println(result);
	}

	public static double simplify(double db) {
		if(db < 0) {
			return db - (int)db+1;
		} else {
			return db - (int)db;
		}
	}
	
	public static double s_solve(double d, double num) {
		
		double sum = 0.0;
		
		for(int i = 0; i <= d; i++) {
			sum += modulo(16, (d-i), 8*i+num) / (8*i + num);
		}
		
		return sum ;
	}
	
	public static double modulo(double b, double n, double k) {
		
		double t = 1;
		double r = 1;
				
		while(t <= n) {
			t = t * 2;
		}
		
		while(true) {
			if(n >= t) {
				r = (b * r) % k;
				n= n - t;
			}
			t = t / 2;
			
			if(t >= 1) {
				r = (r*r) % k;
			} else {
				break;
			}
		}
		return r;
	}	
        }
        ]]></programlisting>
        <para>
           <emphasis role = "strong">Tanulságok, tapasztalatok, magyarázat:</emphasis>
        </para>       
    </section>

</chapter>                
